@model IEnumerable<AdminPureGold.WebUI.ViewModels.PrintJobPureGoldViewModel>

@{
    ViewBag.Title = "Missed";
}
@section header{
    <h2>Missed Customers</h2>
}
<section class="col-lg-12 col-md-12">
    <table>
        <tr>
            <td><h3>For @ViewBag.PrintJob.PrintJobDesc</h3></td>
            <td>&nbsp;&nbsp;&nbsp;</td>
            <td>
                @Html.ActionLink("Back To Details", "DetailPureGold", "PrintJob", new
                {
                    printJobId = ViewBag.PrintJob.PrintJobId
                }, new { @class = "btn btn-xs btn-primary" })
            </td>
        </tr>
    </table>
    <table class="table table-condensed table-responsive sidebar-shadow">
        @if (!Model.Any())
        {
            <tr>
                <td class="alert alert-danger">
                    <strong>There Are No Missing Customers For This Print Job</strong>
                </td>
            </tr>
        }
        else
        {
            <tr>
                <th>Actions</th>
                <th>Agents</th>
                <th>Property</th>
                <th>Customer Name</th>
                <th>Envelope</th>
            </tr>
            foreach (var printJobDetailViewModel in Model)
            {
                var altAddress1 = printJobDetailViewModel.PropertyAlternate == null ? "" : printJobDetailViewModel.PropertyAlternate.AltAddress1;
                var altAddress2 = printJobDetailViewModel.PropertyAlternate == null ? "" : printJobDetailViewModel.PropertyAlternate.AltAddress2;
                var altCity = printJobDetailViewModel.PropertyAlternate == null ? "" : printJobDetailViewModel.PropertyAlternate.AltCity;
                var altState = printJobDetailViewModel.PropertyAlternate == null ? "" : printJobDetailViewModel.PropertyAlternate.AltState;
                var altZip = printJobDetailViewModel.PropertyAlternate == null ? "" : printJobDetailViewModel.PropertyAlternate.AltZip;

                var presentationDetails = printJobDetailViewModel.Transaction.PresentationDetail;
                var customerName = presentationDetails == null ? "" : presentationDetails.CustomerName;
                var envelope = presentationDetails == null ? "" : presentationDetails.LeaveBehindLetterName;

                <tr>
                    <td>
                        @Html.ActionLink("Quality Assurance", "QualityAssuranceEditByTransactionId", "Transaction",
                            new { transactionId = printJobDetailViewModel.Transaction.TransactionId },
                            new { @class = "btn btn-xs btn-link unpadded-buton" })
                        @using (Html.BeginForm("IncludeMissed", "PrintJob", new
                        {
                            printJobId = ViewBag.PrintJob.PrintJobId,
                            page = ViewBag.PageNumber,
                            appObjectToTransactionId = printJobDetailViewModel.AppObjectToTransaction.AppObjectToTransactionId
                        }, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-xs btn-link unpadded-buton">Include</button>
                        }
                    </td>
                    <td>
                        @if (!printJobDetailViewModel.Transaction.TransactionToRelates.Any(t => t.Active == "A"))
                        {
                            <div title="No agents assigned to the customer" class="shadow-on-text red-text pg-tooltip">Missing</div>
                        }
                        else
                        {
                            foreach (var transactionToRelate in printJobDetailViewModel.Transaction.TransactionToRelates)
                            {
                                if (transactionToRelate.Active == "A")
                                {
                                    var agentPerson = printJobDetailViewModel.AgentViewModels.SingleOrDefault(avm =>
                                        avm.PersonNumber == transactionToRelate.PersonNumber);

                                    if (agentPerson != null)
                                    {
                                        <div>@agentPerson.RelateToName.LastName, &nbsp;@agentPerson.RelateToName.FirstName</div>
                                    }
                                    else
                                    {
                                        <div title="Report this to IT. Issue finding person" class="shadow-on-text red-text pg-tooltip">Can't Find Person Number</div>
                                    }
                                }
                            }
                        }
                    </td>
                    @{
                        var valid = printJobDetailViewModel.Transaction.AtlasXPropertyId != 440000000;
                        var classes = "";
                        var title = "";
                        if (!valid)
                        {
                            classes = "red-text shadow-on-text pg-tooltip";
                            title = "Address failed validation with the USPS";
                        }
                        <td>
                            <div title="@title" class="@classes">
                                @altAddress1
                                @altAddress2
                                <br />
                                @altCity
                                @altState
                                @altZip
                            </div>
                        </td>
                    }
                    <td>
                        @if (printJobDetailViewModel.Transaction.PresentationDetail == null)
                        {
                            <div title="Missing customer information" class="shadow-on-text red-text pg-tooltip">Missing</div>
                        }
                        else
                        {
                            if (printJobDetailViewModel.Transaction.PresentationDetail.CustomerName == "")
                            {
                                <div title="Missing customer information" class="shadow-on-text red-text">Missing</div>
                            }
                            else
                            {
                                @customerName
                            }
                        }
                    </td>
                    <td>
                        @if (printJobDetailViewModel.Transaction.PresentationDetail == null)
                        {
                            <div title="Missing envelope information" class="shadow-on-text red-text pg-tooltip">Missing</div>
                        }
                        else
                        {
                            if (printJobDetailViewModel.Transaction.PresentationDetail.LeaveBehindLetterName == "")
                            {
                                <div title="Missing envelope information" class="shadow-on-text red-text pg-tooltip">Missing</div>
                            }
                            else
                            {
                                @envelope
                            }
                        }
                    </td>
                </tr>
            }
        }
    </table>
    @if (Model.Any())
    {
        <table>
            <tr>
                <td>
                    @if (ViewBag.HasPreviousPage)
                    {
                        @Html.ActionLink("First", "Missed", new
                        {
                            printJobId = ViewBag.PrintJob.PrintJobId,
                            page = 1
                        }, new { @class = "btn btn-xs btn-primary" })
                        @Html.Raw("&nbsp;")
                        @Html.ActionLink("Previous", "Missed", new
                        {
                            printJobId = ViewBag.PrintJob.PrintJobId,
                            page = ViewBag.PageNumber - 1
                        }, new { @class = "btn btn-xs btn-primary" })
                    }
                </td>

                <td>
                    @if (ViewBag.HasNextPage)
                    {
                        @Html.ActionLink("Next", "Missed", new
                        {
                            printJobId = ViewBag.PrintJob.PrintJobId,
                            page = ViewBag.PageNumber + 1
                        }, new { @class = "btn btn-xs btn-primary" })
                        @Html.Raw("&nbsp;")
                        @Html.ActionLink("Last", "Missed", new
                        {
                            printJobId = ViewBag.PrintJob.PrintJobId,
                            page = ViewBag.PageCount
                        }, new { @class = "btn btn-xs btn-primary" })
                    }
                </td>
                <td>
                    &nbsp;&nbsp;
                </td>
                <td class="blue-text shadow-on-text">
                    Page @(ViewBag.PageCount < ViewBag.PageNumber ? 0 : ViewBag.PageNumber)
                    of @ViewBag.PageCount
                </td>
                <td>
                    &nbsp;&nbsp;
                </td>
                <td class="blue-text shadow-on-text">
                    Total @ViewBag.Total
                </td>
            </tr>
        </table>
    }
</section>
